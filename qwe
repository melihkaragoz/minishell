SRCS			=	src/main/minishell.c src/main/minish_utils.c src/exec/minish_exec.c \
					src/parse/minish_set_nodes.c src/parse/minish_token_utils.c src/parse/minish_token_seperator.c \
					src/parse/minish_token.c src/exec/minish_run.c src/exec/minish_signal.c src/redirect/ms_redirections.c

OBJS			=	$(SRCS:.c=.o)

NAME			=	minishell

GNL				=	src/get_next_line/get_next_line.a

LIBFT			=	src/libft/libft.a

CC				=	gcc

CFLAGS			=	-Wall -Wextra -Werror -g

RM				=	rm -rf

all:			$(NAME)

$(NAME):		$(OBJS) $(LIBFT) $(GNL)
				@$(CC) $(CFLAGS) $(OBJS) $(GNL) $(LIBFT) -o $(NAME) -lreadline
				@echo "\033[0;32mCompiled successfully\033[0m"

%.o : %.c
				@$(CC) $(CFLAGS) -c $< -o $@

$(GNL):
				@make -C src/get_next_line

$(LIBFT):
				@make bonus -C src/libft

clean:
				@$(RM) $(OBJS)
				@make clean -C src/libft
				@make clean -C src/get_next_line

fclean:			clean
				@$(RM) $(NAME)
				@make fclean -C src/libft
				@make fclean -C src/get_next_line

re:				fclean $(NAME)

git:			fclean
				@python3 ./other/git.py

.PHONY:			all clean fclean re git
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_atoi.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: mkaragoz <mkaragoz@student.42istanbul.c    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/10/06 04:35:46 by mkaragoz          #+#    #+#             */
/*   Updated: 2022/10/25 00:14:20 by mkaragoz         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

int	ft_isspace(char c)
{
	if (c == 32 || (c >= 9 && c <= 13))
		return (1);
	return (0);
}

int	ft_atoi(const char *str)
{
	int	sign;
	int	res;

	sign = 1;
	res = 0;
	while (ft_isspace(*str))
		str++;
	if (*str == '+' || *str == '-')
	{
		if (*str == '-')
			sign = -1;
		str++;
	}
	while (ft_isdigit(*str))
		res = (res * 10) + (*str++ - '0');
	res *= sign;
	return (res);
}
